{"version":3,"file":"vue-i18n-phrase.umd.js","sources":["../src/phrase/projects.ts","../src/phrase/locales.ts","../src/phrase/files.ts","../src/phrase/setup.ts","../src/commands/sync.ts","../src/index.ts"],"sourcesContent":["import axios from 'axios';\nimport { PhraseProject } from '../types';\n\nexport async function getProject (projectID?: string): Promise<PhraseProject> {\n  const { data: projects }: { data: PhraseProject[] } =\n    await axios.get('https://api.phraseapp.com/api/v2/projects');\n\n  console.log(projects);\n\n\n  const project = (projectID) ? projects.find((project) => project.id === projectID) : projects[0];\n\n  if (!project) throw new Error('Could not find project from PhraseAPI. If no project was defined as an argument, then there is no project in the selected Phrase Account')\n\n  return project;\n}\n","import axios from 'axios';\nimport { PhraseProject, PhraseLocale } from '../types';\n\nfunction getLastPageFromLink (link: string): number {\n  const regex = /page=([0-9]*)&per_page=100>; rel=last/;\n  const regexMatch = regex.exec(link);\n\n  if (!regexMatch) throw new Error('Could not get pagination info from the PhraseAPI');\n\n  return parseInt(regexMatch[1]);\n}\n\nasync function getPageOfLocales (project: PhraseProject, page: number): Promise<{ data: PhraseLocale[]; lastPage: number }> {\n  const { data, headers } = await axios.get(`https://api.phraseapp.com/api/v2/projects/${project.id}/locales`, {\n    params: {\n      page,\n      per_page: 100, // eslint-disable-line @typescript-eslint/camelcase\n    },\n  });\n  return {\n    data,\n    lastPage: getLastPageFromLink(headers.link),\n  };\n}\n\nexport async function getLocales (project: PhraseProject): Promise<PhraseLocale[]> {\n  const locales: PhraseLocale[] = [];\n\n  const { data: firstData, lastPage } = await getPageOfLocales(project, 1);\n  locales.push(...firstData);\n\n  for (let page = 2; page <= lastPage; page++) {\n    const { data } = await getPageOfLocales(project, page);\n    locales.push(...data);\n  }\n\n  return locales;\n}\n\nexport async function getLocale (project: PhraseProject, localeCode: string | boolean = false, locales?: PhraseLocale[]): Promise<PhraseLocale> {\n  if (!locales) {\n    locales = await getLocales(project);\n  }\n\n  let locale: PhraseLocale | undefined;\n  if (typeof localeCode === 'string') {\n    locale = locales.find((locale) => locale.code === localeCode);\n  }\n  locale = locales.find((locale) => locale.default);\n\n  if (!locale) throw new Error('Locale not found, is the argument makeTranslation set correctly?');\n\n  return locale;\n}\n\n\n","import axios from 'axios';\nimport {\n  PhraseLocale,\n  PhraseProject,\n  PhraseTranslation,\n  PhraseUpload,\n} from '../types';\nimport {\n  I18NLanguage,\n  I18NItem,\n} from 'vue-i18n-extract/dist-types/library/models';\nimport FormData from 'form-data';\nimport fs from 'fs';\n\nexport async function confirmUploadSuccess (\n  project: PhraseProject,\n  upload: PhraseUpload,\n): Promise<PhraseUpload> {\n  return new Promise((resolve, reject) => {\n    let count = 1;\n    function viewUploadDetails (): void {\n      if (count < 13) {\n        setTimeout(async () => {\n          const { data: uploadedFile }: { data: PhraseUpload } =\n          await axios.get(`https://api.phraseapp.com/api/v2/projects/${project.id}/uploads/${upload.id}`);\n          if (uploadedFile.state === 'success') {\n            resolve(uploadedFile);\n          } else {\n            count++;\n            viewUploadDetails();\n          }\n        }, 500);\n      } else {\n        reject(\n          'It has taken over a minute to confirm the upload was a success. ' +\n          'Please refer to your Phrase Dashboard Web UI Uploaded Files section for more information.',\n        );\n      }\n    }\n    viewUploadDetails();\n  });\n}\n\nexport async function uploadLanguageFile (\n  filePath: string,\n  project: PhraseProject,\n  locale: PhraseLocale,\n  tags?: string,\n  makeTranslation: boolean | string = false,\n): Promise<PhraseUpload> {\n  const formData = new FormData();\n\n  formData.append(\n    'file',\n    fs.createReadStream(filePath),\n    `${locale.code}-${(tags || '').split(',').join('-')}.json`,\n  );\n  formData.append('file_format', `simple_json`);\n  formData.append('locale_id', locale.id);\n  if (tags) {\n    formData.append('tags', tags);\n  }\n  formData.append('update_translations', `${!!makeTranslation}`);\n  formData.append('skip_upload_tags', 'true');\n\n  const { data: uploadedFile }: { data: PhraseUpload } = await axios.post(\n    `https://api.phraseapp.com/api/v2/projects/${project.id}/uploads`,\n    formData,\n    {\n      headers: formData.getHeaders(),\n    },\n  );\n\n  return confirmUploadSuccess(project, uploadedFile);\n}\n\n\n\nexport async function downloadAllTranslationsToI18NLanguage (\n  locales: PhraseLocale[],\n  project: PhraseProject,\n  tags?: string,\n): Promise<I18NLanguage> {\n  const i18nLanguage: I18NLanguage = {};\n\n  for (const locale of locales) {\n    const { data }: { data: PhraseTranslation[] } = await axios.get(\n      `https://api.phraseapp.com/api/v2/projects/${project.id}/locales/${\n        locale.id\n      }/download`,\n      { params: { file_format: 'simple_json', tags } }, // eslint-disable-line @typescript-eslint/camelcase\n    );\n\n    i18nLanguage[locale.code] = Object.keys(data).map((path) => {\n      return {\n        language: locale.code,\n        path,\n      };\n    }) as I18NItem[];\n  }\n\n  return i18nLanguage;\n}\n","import axios, { AxiosError } from 'axios';\n\nexport function setupAxios (accessToken: string): void {\n  axios.defaults.headers.common.Authorization = `token ${accessToken}`;\n  axios.interceptors.response.use(\n    (response) => response,\n    (error: AxiosError) => {\n      if (error.response && error.response.status === 429) {\n        throw new Error('Too many requests sent to the PhraseAPI, please wait 5 minutes and try again.');\n      }\n\n      throw error;\n    },\n  );\n}\n","import chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport VueI18NExtract from 'vue-i18n-extract';\nimport { I18NItem } from 'vue-i18n-extract/dist-types/library/models';\nimport {\n  getLocale,\n  getProject,\n  setupAxios,\n  uploadLanguageFile,\n  downloadAllTranslationsToI18NLanguage,\n  getLocales,\n} from '../phrase';\nimport {\n  SyncCommandOptions,\n  PhraseLocale,\n} from '../types';\n\nfunction parsedVueFilesToJSON (\n  parsedVueFiles: I18NItem[],\n  makeTranslation: boolean | string = false,\n): Record<string, string> {\n  return parsedVueFiles.reduce((accumulator, i18nItem) => {\n    if (!!makeTranslation) {\n      accumulator[i18nItem.path] = i18nItem.path;\n    } else {\n      accumulator[i18nItem.path] = '';\n    }\n    return accumulator;\n  }, {});\n}\n\nasync function makeOutputDir (outputDir: string): Promise<void> {\n  return fs.mkdir(\n    path.resolve(process.cwd(), outputDir),\n    { recursive: true },\n    (err) => { if (err) { throw err; } },\n  );\n}\n\nfunction writeLanguageJSON (languageJSON: object, outputDir: string, locale: PhraseLocale): string {\n  const filePath = path.resolve(process.cwd(), outputDir, `${locale.code}.json`);\n  fs.writeFile(\n    filePath,\n    JSON.stringify(languageJSON),\n    (err) => { if (err) { throw err; } },\n  );\n  return filePath;\n}\n\nexport async function sync ({\n  vueFiles,\n  accessToken,\n  projectID,\n  tags,\n  makeTranslation,\n  skipReport = false,\n  dryRun = false,\n  outputDir = './phrase-reports',\n}: SyncCommandOptions): Promise<void> {\n  const parsedVueFiles = VueI18NExtract.parseVueFiles(vueFiles);\n  const languageJSON = parsedVueFilesToJSON(parsedVueFiles, makeTranslation);\n\n  console.log(chalk.green(`\\nFound ${Object.keys(languageJSON).length} unique keys in your Vue.js files`));\n\n  setupAxios(accessToken);\n\n  console.log(chalk.bold(`\\nGetting Phrase project and locale...`));\n\n  const selectedProject = await getProject(projectID);\n  const locales = await getLocales(selectedProject);\n  const selectedLocale = await getLocale(selectedProject, makeTranslation, locales);\n\n  console.log(`Using project: ${chalk.green(selectedProject.name)}`);\n  console.log(`Using locale: ${chalk.green(selectedLocale.code)}`);\n\n  await makeOutputDir(outputDir);\n  const filePath = writeLanguageJSON(languageJSON, outputDir, selectedLocale);\n\n  console.log(`\\nUploading keys to Phrase for the ${chalk.bold(selectedLocale.name)} locale.`);\n  if (tags) { console.log(`With the tags ${chalk.bold(tags)}`); }\n  if (!!makeTranslation) { console.log(`With the keys set as the translation`); }\n\n  if (!dryRun) {\n    const uploadedFile =\n      await uploadLanguageFile(filePath, selectedProject, selectedLocale, tags, makeTranslation);\n    console.log(`\\nKeys successfully added!`);\n    console.log(`\\nUpload File Summary:`);\n    console.log(`File Name: ${uploadedFile.filename}`);\n    console.log(`Keys Created: ${uploadedFile.summary.translation_keys_created}`);\n    console.log(`Keys Updated: ${uploadedFile.summary.translations_updated}`);\n    console.log(`Keys Unmentioned: ${uploadedFile.summary.translation_keys_unmentioned}`);\n    console.log(`Key Translations Created: ${uploadedFile.summary.translations_created}`);\n    console.log(`Key Translations Updated: ${uploadedFile.summary.translations_updated}`);\n    console.log(`Tags Created: ${uploadedFile.summary.tags_created}`);\n  } else {\n    console.log(chalk.bgRed.whiteBright(`\\nPsyke! it's a dry run, nothing is changed in Phrase!`));\n  }\n\n  if (!skipReport) {\n    console.log(chalk.bold(`\\nGenerating a full report...`));\n    if (tags) { console.log(`Getting all translations with the tags ${chalk.bold(tags)}`); }\n\n    const i18nLanguage = await downloadAllTranslationsToI18NLanguage(locales, selectedProject, tags);\n    const report = VueI18NExtract.extractI18NReport(parsedVueFiles, i18nLanguage);\n    await VueI18NExtract.writeReportToFile(report, `${outputDir}/report.json`);\n  }\n\n  console.log(chalk.green(`\\nComplete! you can view you language file and report at ${outputDir}\\n`));\n}\n","import { Command } from 'commander';\nimport { sync } from './commands/index.js';\n\nconst program = new Command();\nprogram\n  .version(process.env.npm_package_version || '0.0.0')\n  .usage('sync [options]')\n  .command('sync', { isDefault: true })\n  .option(\n    '-v --vueFiles <vueFiles>',\n    'A file glob pointing to your Vue.js source files.'\n  )\n  .option(\n    '-a --accessToken <accessToken>',\n    'Phrase API access token'\n  )\n  .option(\n    '-p --projectID [project]',\n    'Phrase Project ID, defaults to the first project in your account, projectID can be found on projects page, then hovering over project and choosing ID'\n  )\n  .option(\n    '-t, --tags [tags]',\n    'A comma separated list of any custom tags you would like to apply to the keys',\n  )\n  .option(\n    '-m --makeTranslation [makeTranslation]',\n    'If you would like the key path to be the translation in your default locale. Optionally set as a locale code to make translation in a non-default locale'\n  )\n  .option(\n    '-s --skipReport [skipReport]',\n    'Skip report generation'\n  )\n  .option(\n    '-o --outputDir [outputDir]',\n    'Directory for report files. Will default to ./phrase-reports',\n  )\n  .option(\n    '-d --dryRun [dryRun]',\n    'Use if you do not want anything posted to Phrase',\n  )\n  .action(sync);\n\nprogram.parse(process.argv);\n"],"names":["getProject","projectID","data","projects","axios","get","console","log","project","find","id","Error","getLastPageFromLink","link","regex","regexMatch","exec","parseInt","getPageOfLocales","page","headers","params","per_page","lastPage","getLocales","locales","firstData","push","getLocale","localeCode","locale","code","default","confirmUploadSuccess","upload","Promise","resolve","reject","count","viewUploadDetails","setTimeout","uploadedFile","state","uploadLanguageFile","filePath","tags","makeTranslation","formData","FormData","append","fs","createReadStream","split","join","post","getHeaders","downloadAllTranslationsToI18NLanguage","i18nLanguage","file_format","Object","keys","map","path","language","setupAxios","accessToken","defaults","common","Authorization","interceptors","response","use","error","status","parsedVueFilesToJSON","parsedVueFiles","reduce","accumulator","i18nItem","makeOutputDir","outputDir","mkdir","process","cwd","recursive","err","writeLanguageJSON","languageJSON","writeFile","JSON","stringify","sync","vueFiles","skipReport","dryRun","VueI18NExtract","parseVueFiles","chalk","green","length","bold","selectedProject","selectedLocale","name","filename","summary","translation_keys_created","translations_updated","translation_keys_unmentioned","translations_created","tags_created","bgRed","whiteBright","report","extractI18NReport","writeReportToFile","program","Command","version","env","npm_package_version","usage","command","isDefault","option","action","parse","argv"],"mappings":"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"}