!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("chalk"),require("fs"),require("path"),require("vue-i18n-extract"),require("axios"),require("form-data")):"function"==typeof define&&define.amd?define(["exports","chalk","fs","path","vue-i18n-extract","axios","form-data"],a):a((e=e||self).vueI18NPhrase={},e.chalk,e.fs,e.path,e.vueI18nExtract,e.axios,e.FormData)}(this,function(e,a,t,o,r,n,s){async function i(e){var{data:a}=await n.get("https://api.phraseapp.com/api/v2/projects"),t=e?a.find(a=>a.id===e):a[0];if(!t)throw new Error("Could not find project from PhraseAPI. If no project was defined as an argument, then there is no project in the selected Phrase Account");return t}function l(e){var a=/page=([0-9]*)&per_page=100>; rel=last/.exec(e);if(!a)throw new Error("Could not get pagination info from the PhraseAPI");return parseInt(a[1])}async function c(e,a){var{data:t,headers:o}=await n.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/locales",{params:{page:a,per_page:100}});return{data:t,lastPage:l(o.link)}}async function p(e){var a=[],{data:t,lastPage:o}=await c(e,1);a.push(...t);for(var r=2;r<=o;r++){var{data:n}=await c(e,r);a.push(...n)}return a}async function d(e,a,t){var o;if(void 0===a&&(a=!1),t||(t=await p(e)),"string"==typeof a?(o=t.find(e=>e.code===a))||(o=t.find(e=>e.code.split("-")[0]===a)):o=t.find(e=>e.default),!o)throw new Error("Locale not found, is the argument makeTranslation set correctly?");return o}async function u(e,a){return new Promise((t,o)=>{var r=1;!function s(){r<13?setTimeout(async()=>{var{data:o}=await n.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/uploads/"+a.id);"success"===o.state?t(o):(r++,s())},500):o("It has taken over a minute to confirm the upload was a success. Please refer to your Phrase Dashboard Web UI Uploaded Files section for more information.")}()})}async function f(e,a,o,r,i){void 0===i&&(i=!1);var l=new s;l.append("file",t.createReadStream(e),o.code+"-"+(r||"").split(",").join("-")+".json"),l.append("file_format","simple_json"),l.append("locale_id",o.id),r&&l.append("tags",r),l.append("update_translations",""+!!i),l.append("skip_upload_tags","true");var{data:c}=await n.post("https://api.phraseapp.com/api/v2/projects/"+a.id+"/uploads",l,{headers:l.getHeaders()});return u(a,c)}async function g(e,a,t){var o={},r=async function(e){var{data:r}=await n.get("https://api.phraseapp.com/api/v2/projects/"+a.id+"/locales/"+e.id+"/download",{params:{file_format:"simple_json",tags:t}});o[e.code]=Object.keys(r).map(a=>({language:e.code,path:a}))};for(var s of e)await r(s);return o}function h(e){n.defaults.headers.common.Authorization="token "+e,n.interceptors.response.use(e=>e,e=>{if(e.response&&429===e.response.status)throw new Error("Too many requests sent to the PhraseAPI, please wait 5 minutes and try again.");throw e})}a=a&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a,t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o,n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s;var y={sync:async function(e){var{vueFiles:n,accessToken:s,projectID:l,tags:c,makeTranslation:u,skipReport:y=!1,dryRun:m=!1,outputDir:w="./phrase-reports"}=e,v=r.parseVueFiles(n),j=function(e,a){return void 0===a&&(a=!1),e.reduce((e,t)=>(e[t.path]=a?t.path:"",e),{})}(v,u);console.log(a.green("\nFound "+Object.keys(j).length+" unique keys in your Vue.js files")),h(s),console.log(a.bold("\nGetting Phrase project and locale..."));var P=await i(l),k=await p(P),_=await d(P,u,k);console.log("Using project: "+a.green(P.name)),console.log("Using locale: "+a.green(_.code)),await async function(e){return t.mkdir(o.resolve(process.cwd(),e),{recursive:!0},e=>{if(e)throw e})}(w);var b=function(e,a,r){var n=o.resolve(process.cwd(),a,r.code+".json");return t.writeFile(n,JSON.stringify(e),e=>{if(e)throw e}),n}(j,w,_);if(console.log("\nUploading keys to Phrase for the "+a.bold(_.name)+" locale."),c&&console.log("With the tags "+a.bold(c)),u&&console.log("With the keys set as the translation"),m)console.log(a.bgRed.whiteBright("\nPsyke! it's a dry run, nothing is changed in Phrase!"));else{var O=await f(b,P,_,c,u);console.log("\nKeys successfully added!"),console.log("\nUpload File Summary:"),console.log("File Name: "+O.filename),console.log("Keys Created: "+O.summary.translation_keys_created),console.log("Keys Updated: "+O.summary.translations_updated),console.log("Keys Unmentioned: "+O.summary.translation_keys_unmentioned),console.log("Key Translations Created: "+O.summary.translations_created),console.log("Key Translations Updated: "+O.summary.translations_updated),console.log("Tags Created: "+O.summary.tags_created)}if(!y){console.log(a.bold("\nGenerating a full report...")),c&&console.log("Getting all translations with the tags "+a.bold(c));var x=await g(k,P,c),I=r.extractI18NReport(v,x);await r.writeReportToFile(I,w+"/report.json")}console.log(a.green("\nComplete! you can view you language file and report at "+w+"\n"))}};e.confirmUploadSuccess=u,e.default=y,e.downloadAllTranslationsToI18NLanguage=g,e.getLocale=d,e.getLocales=p,e.getProject=i,e.setupAxios=h,e.uploadLanguageFile=f});
//# sourceMappingURL=vue-i18n-phrase.umd.js.map
