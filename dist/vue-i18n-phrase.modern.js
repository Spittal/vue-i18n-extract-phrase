import e from"chalk";import a from"fs";import o from"path";import t from"vue-i18n-extract";import r from"axios";import n from"form-data";function s(e){var a=/page=([0-9]*)&per_page=100>; rel=last/.exec(e);if(!a)throw new Error("Could not get pagination info from the PhraseAPI");return parseInt(a[1])}async function i(e,a){var{data:o,headers:t}=await r.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/locales",{params:{page:a,per_page:100}});return{data:o,lastPage:s(t.link)}}async function l(e){var a=[],{data:o,lastPage:t}=await i(e,1);a.push(...o);for(var r=2;r<=t;r++){var{data:n}=await i(e,r);a.push(...n)}return a}var p={sync:async function(s){var{vueFiles:i,accessToken:p,projectID:c,tags:d,makeTranslation:u,skipReport:f=!1,dryRun:g=!1,outputDir:m="./phrase-reports"}=s,h=t.parseVueFiles(i),y=function(e,a){return void 0===a&&(a=!1),e.reduce((e,o)=>(e[o.path]=a?o.path:"",e),{})}(h,u);console.log(e.green("\nFound "+Object.keys(y).length+" unique keys in your Vue.js files")),function(e){r.defaults.headers.common.Authorization="token "+e,r.interceptors.response.use(e=>e,e=>{if(e.response&&429===e.response.status)throw new Error("Too many requests sent to the PhraseAPI, please wait 5 minutes and try again.");throw e})}(p),console.log(e.bold("\nGetting Phrase project and locale..."));var w=await async function(e){var{data:a}=await r.get("https://api.phraseapp.com/api/v2/projects"),o=e?a.find(a=>a.id===e):a[0];if(!o)throw new Error("Could not find project from PhraseAPI. If no project was defined as an argument, then there is no project in the selected Phrase Account");return o}(c),v=await l(w),j=await async function(e,a,o){var t;if(void 0===a&&(a=!1),o||(o=await l(e)),"string"==typeof a?(t=o.find(e=>e.code===a))||(t=o.find(e=>e.code.split("-")[0]===a)):t=o.find(e=>e.default),!t)throw new Error("Locale not found, is the argument makeTranslation set correctly?");return t}(w,u,v);console.log("Using project: "+e.green(w.name)),console.log("Using locale: "+e.green(j.code)),await async function(e){return a.mkdir(o.resolve(process.cwd(),e),{recursive:!0},e=>{if(e)throw e})}(m);var k=function(e,t,r){var n=o.resolve(process.cwd(),t,r.code+".json");return a.writeFile(n,JSON.stringify(e),e=>{if(e)throw e}),n}(y,m,j);if(console.log("\nUploading keys to Phrase for the "+e.bold(j.name)+" locale."),d&&console.log("With the tags "+e.bold(d)),u&&console.log("With the keys set as the translation"),g)console.log(e.bgRed.whiteBright("\nPsyke! it's a dry run, nothing is changed in Phrase!"));else{var _=await async function(e,o,t,s,i){void 0===i&&(i=!1);var l=new n;l.append("file",a.createReadStream(e),t.code+"-"+(s||"").split(",").join("-")+".json"),l.append("file_format","simple_json"),l.append("locale_id",t.id),s&&l.append("tags",s),l.append("update_translations",""+!!i),l.append("skip_upload_tags","true");var{data:p}=await r.post("https://api.phraseapp.com/api/v2/projects/"+o.id+"/uploads",l,{headers:l.getHeaders()});return async function(e,a){return new Promise((o,t)=>{var n=1;!function s(){n<13?setTimeout(async()=>{var{data:t}=await r.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/uploads/"+a.id);"success"===t.state?o(t):(n++,s())},500):t("It has taken over a minute to confirm the upload was a success. Please refer to your Phrase Dashboard Web UI Uploaded Files section for more information.")}()})}(o,p)}(k,w,j,d,u);console.log("\nKeys successfully added!"),console.log("\nUpload File Summary:"),console.log("File Name: "+_.filename),console.log("Keys Created: "+_.summary.translation_keys_created),console.log("Keys Updated: "+_.summary.translations_updated),console.log("Keys Unmentioned: "+_.summary.translation_keys_unmentioned),console.log("Key Translations Created: "+_.summary.translations_created),console.log("Key Translations Updated: "+_.summary.translations_updated),console.log("Tags Created: "+_.summary.tags_created)}if(!f){console.log(e.bold("\nGenerating a full report...")),d&&console.log("Getting all translations with the tags "+e.bold(d));var P=await async function(e,a,o){var t={},n=async function(e){var{data:n}=await r.get("https://api.phraseapp.com/api/v2/projects/"+a.id+"/locales/"+e.id+"/download",{params:{file_format:"simple_json",tags:o}});t[e.code]=Object.keys(n).map(a=>({language:e.code,path:a}))};for(var s of e)await n(s);return t}(v,w,d),b=t.extractI18NReport(h,P);await t.writeReportToFile(b,m+"/report.json")}console.log(e.green("\nComplete! you can view you language file and report at "+m+"\n"))}};export default p;
//# sourceMappingURL=vue-i18n-phrase.modern.js.map
