import e from"chalk";import a from"fs";import o from"path";import{parseVueFiles as t,extractI18NReport as n,writeReportToFile as r}from"vue-i18n-extract";import s from"axios";import i from"form-data";async function l(e){var{data:a}=await s.get("https://api.phraseapp.com/api/v2/projects"),o=e?a.find(a=>a.id===e):a[0];if(!o)throw new Error("Could not find project from PhraseAPI. If no project was defined as an argument, then there is no project in the selected Phrase Account");return o}function p(e){var a=/page=([0-9]*)&per_page=100>; rel=last/.exec(e);if(!a)throw new Error("Could not get pagination info from the PhraseAPI");return parseInt(a[1])}async function c(e,a){var{data:o,headers:t}=await s.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/locales",{params:{page:a,per_page:100}});return{data:o,lastPage:p(t.link)}}async function d(e){var a=[],{data:o,lastPage:t}=await c(e,1);a.push(...o);for(var n=2;n<=t;n++){var{data:r}=await c(e,n);a.push(...r)}return a}async function u(e,a,o){var t;if(void 0===a&&(a=!1),o||(o=await d(e)),"string"==typeof a?(t=o.find(e=>e.code===a))||(t=o.find(e=>e.code.split("-")[0]===a)):t=o.find(e=>e.default),!t)throw new Error("Locale not found, is the argument makeTranslation set correctly?");return t}async function f(e,a){return new Promise((o,t)=>{var n=1;!function r(){n<13?setTimeout(async()=>{var{data:t}=await s.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/uploads/"+a.id);"success"===t.state?o(t):(n++,r())},500):t("It has taken over a minute to confirm the upload was a success. Please refer to your Phrase Dashboard Web UI Uploaded Files section for more information.")}()})}async function g(e,o,t,n,r){void 0===r&&(r=!1);var l=new i;l.append("file",a.createReadStream(e),t.code+"-"+(n||"").split(",").join("-")+".json"),l.append("file_format","simple_json"),l.append("locale_id",t.id),n&&l.append("tags",n),l.append("update_translations",""+!!r),l.append("skip_upload_tags","true");var{data:p}=await s.post("https://api.phraseapp.com/api/v2/projects/"+o.id+"/uploads",l,{headers:l.getHeaders()});return f(o,p)}async function m(e,a,o){var t={},n=async function(e){var{data:n}=await s.get("https://api.phraseapp.com/api/v2/projects/"+a.id+"/locales/"+e.id+"/download",{params:{file_format:"simple_json",tags:o}});t[e.code]=Object.keys(n).map(a=>({language:e.code,path:a}))};for(var r of e)await n(r);return t}function h(e){s.defaults.headers.common.Authorization="token "+e,s.interceptors.response.use(e=>e,e=>{if(e.response&&429===e.response.status)throw new Error("Too many requests sent to the PhraseAPI, please wait 5 minutes and try again.");throw e})}var y={sync:async function(s){var{vueFiles:i,accessToken:p,projectID:c,tags:f,makeTranslation:y,skipReport:w=!1,dryRun:v=!1,outputDir:j="./phrase-reports"}=s,k=t(i),_=function(e,a){return void 0===a&&(a=!1),e.reduce((e,o)=>(e[o.path]=a?o.path:"",e),{})}(k,y);console.log(e.green("\nFound "+Object.keys(_).length+" unique keys in your Vue.js files")),h(p),console.log(e.bold("\nGetting Phrase project and locale..."));var P=await l(c),b=await d(P),U=await u(P,y,b);console.log("Using project: "+e.green(P.name)),console.log("Using locale: "+e.green(U.code)),await async function(e){return a.mkdir(o.resolve(process.cwd(),e),{recursive:!0},e=>{if(e)throw e})}(j);var I=function(e,t,n){var r=o.resolve(process.cwd(),t,n.code+".json");return a.writeFile(r,JSON.stringify(e),e=>{if(e)throw e}),r}(_,j,U);if(console.log("\nUploading keys to Phrase for the "+e.bold(U.name)+" locale."),f&&console.log("With the tags "+e.bold(f)),y&&console.log("With the keys set as the translation"),v)console.log(e.bgRed.whiteBright("\nPsyke! it's a dry run, nothing is changed in Phrase!"));else{var T=await g(I,P,U,f,y);console.log("\nKeys successfully added!"),console.log("\nUpload File Summary:"),console.log("File Name: "+T.filename),console.log("Keys Created: "+T.summary.translation_keys_created),console.log("Keys Updated: "+T.summary.translations_updated),console.log("Keys Unmentioned: "+T.summary.translation_keys_unmentioned),console.log("Key Translations Created: "+T.summary.translations_created),console.log("Key Translations Updated: "+T.summary.translations_updated),console.log("Tags Created: "+T.summary.tags_created)}if(!w){console.log(e.bold("\nGenerating a full report...")),f&&console.log("Getting all translations with the tags "+e.bold(f));var C=await m(b,P,f),F=n(k,C);await r(F,j+"/report.json")}console.log(e.green("\nComplete! you can view you language file and report at "+j+"\n"))}};export default y;export{f as confirmUploadSuccess,m as downloadAllTranslationsToI18NLanguage,u as getLocale,d as getLocales,l as getProject,h as setupAxios,g as uploadLanguageFile};
//# sourceMappingURL=vue-i18n-phrase.modern.js.map
