import e from"express";import a from"axios";import t from"cors";import"chalk";import"fs";import"path";import"vue-i18n-extract";import"form-data";function r(e){var a=/page=([0-9]*)&per_page=100>; rel=last/.exec(e);if(!a)throw new Error("Could not get pagination info from the PhraseAPI");return parseInt(a[1])}async function o(e,t){var{data:o,headers:s}=await a.get("https://api.phraseapp.com/api/v2/projects/"+e.id+"/locales",{params:{page:t,per_page:100}});return{data:o,lastPage:r(s.link)}}var s=t({origin:"*"}),n=e();n.use(s),n.get("/getLocaleFromPhrase",async(e,t)=>{if(!process.env.PHRASE_ACCESS_TOKEN){var r=new Error("No PHRASE_ACCESS_TOKEN environment variable defined.");throw t.status(500).send(JSON.stringify({error:r.toString()})),r}var s;s=process.env.PHRASE_ACCESS_TOKEN,a.defaults.headers.common.Authorization="token "+s,a.interceptors.response.use(e=>e,e=>{if(e.response&&429===e.response.status)throw new Error("Too many requests sent to the PhraseAPI, please wait 5 minutes and try again.");throw e});var n=await async function(e){var{data:t}=await a.get("https://api.phraseapp.com/api/v2/projects"),r=e?t.find(a=>a.id===e):t[0];if(!r)throw new Error("Could not find project from PhraseAPI. If no project was defined as an argument, then there is no project in the selected Phrase Account");return r}(process.env.PHRASE_PROJECT_ID),i=await async function(e,a,t){var r;if(void 0===a&&(a=!1),t||(t=await async function(e){var a=[],{data:t,lastPage:r}=await o(e,1);a.push(...t);for(var s=2;s<=r;s++){var{data:n}=await o(e,s);a.push(...n)}return a}(e)),"string"==typeof a?(r=t.find(e=>e.code===a))||(r=t.find(e=>e.code.split("-")[0]===a)):r=t.find(e=>e.default),!r)throw new Error("Locale not found, is the argument makeTranslation set correctly?");return r}(n,e.query.locale);try{var{data:p}=await a.get("https://api.phraseapp.com/api/v2/projects/"+n.id+"/locales/"+i.id+"/download",{params:{file_format:"simple_json",tags:e.query.tags}});t.set("Content-Type","application/json").set("Cache-Control","max-age=3600").send(JSON.stringify(p))}catch(e){throw t.status(e.response.status||500).send(JSON.stringify(e.response.data)),e}}),n.listen(process.env.PORT||8080,()=>console.log("Phrase Locale Server Started"));
//# sourceMappingURL=vue-i18n-phrase.modern.js.map
